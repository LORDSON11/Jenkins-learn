pipeline {
    agent any

    environment {
        TF_DIR = "devops/terraform"
        ANSIBLE_DIR = "devops/ansible"
        DOCKER_DIR = "devops/docker"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/LORDSON11/Jenkins-learn.git'
            }
        }

        stage('Terraform Init & Apply') {
            steps {
                withCredentials([
                    string(credentialsId: 'aws-access-key', variable: 'AWS_ACCESS_KEY'),
                    string(credentialsId: 'aws-secret-key', variable: 'AWS_SECRET_KEY')
                ]) {
                    dir("${TF_DIR}") {
                        sh '''
                        terraform init
                        terraform apply -auto-approve \
                          -var="aws_access_key=$AWS_ACCESS_KEY" \
                          -var="aws_secret_key=$AWS_SECRET_KEY"
                        '''
                    }
                }
            }
        }

        stage('Generate Inventory') {
            steps {
                sh 'chmod +x devops/generate_inventory.sh && ./devops/generate_inventory.sh'
            }
        }

        stage('Install Docker via Ansible') {
            steps {
                sh '''
                ansible-playbook -i ${ANSIBLE_DIR}/dynamic_inventory.ini ${ANSIBLE_DIR}/install_docker.yml
                '''
            }
        }

        stage('Run Docker App') {
            steps {
                withCredentials([file(credentialsId: 'node-key', variable: 'SSH_KEY')]) {
                    sh '''
                    IP=$(terraform -chdir=${TF_DIR} output -raw public_ip)
                    scp -o StrictHostKeyChecking=no -i $SSH_KEY ${DOCKER_DIR}/* ec2-user@$IP:/home/ec2-user/
                    ssh -o StrictHostKeyChecking=no -i $SSH_KEY ec2-user@$IP "docker build -t myapp . && docker run -d -p 80:80 myapp"
                    '''
                }
            }
        }

        stage('Verify App') {
            steps {
                sh '''
                IP=$(terraform -chdir=${TF_DIR} output -raw public_ip)
                sleep 10
                curl http://$IP
                '''
            }
        }
    }

    post {
        always {
            echo "Pipeline Finished"
        }
    }
}
