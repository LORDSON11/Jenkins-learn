pipeline {
    agent any

    environment {
        TF_DIR = "devops/terraform"
        ANSIBLE_DIR = "devops/ansible"
        DOCKER_DIR = "devops/docker"
        SSH_USER = "ec2-user"
        APP_PORT = "8081"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/LORDSON11/Jenkins-learn.git'
            }
        }

        stage('Terraform Init & Apply') {
            steps {
                withCredentials([
                    string(credentialsId: 'aws-access-key', variable: 'AWS_ACCESS_KEY'),
                    string(credentialsId: 'aws-secret-key', variable: 'AWS_SECRET_KEY')
                ]) {
                    dir("${TF_DIR}") {
                        sh '''
                            terraform init
                            terraform apply -auto-approve \
                              -var="aws_access_key=$AWS_ACCESS_KEY" \
                              -var="aws_secret_key=$AWS_SECRET_KEY"
                        '''
                    }
                }
            }
        }

        stage('Generate Inventory') {
            steps {
                sh '''
                    chmod +x devops/generate_inventory.sh
                    ./devops/generate_inventory.sh
                '''
            }
        }

        stage('Install Docker via Ansible') {
            steps {
                sh '''
                    ansible-playbook -i ${ANSIBLE_DIR}/dynamic_inventory.ini ${ANSIBLE_DIR}/install_docker.yml || true
                '''
            }
        }

      stage('Run Docker App') {
    steps {
        withCredentials([
            sshUserPrivateKey(
                credentialsId: 'ec2-ssh-key',
                keyFileVariable: 'SSH_KEY',
                usernameVariable: 'UNUSED_SSH_USER'
            )
        ]) {
            sh '''
                IP=$(terraform -chdir=${TF_DIR} output -raw public_ip)
                echo "Deploying to $IP as ${SSH_USER}"

                scp -o StrictHostKeyChecking=no -i $SSH_KEY ${DOCKER_DIR}/* ${SSH_USER}@$IP:/home/${SSH_USER}/

                ssh -o StrictHostKeyChecking=no -i $SSH_KEY ${SSH_USER}@$IP bash -s << 'ENDSSH'
                    cd /home/${SSH_USER}
                    docker build -t myapp .
                    docker run -d -p ${APP_PORT}:80 myapp
                ENDSSH
            '''
        }
    }
}


        stage('Verify App') {
            steps {
                sh '''
                    IP=$(terraform -chdir=${TF_DIR} output -raw public_ip)
                    echo "Waiting for app to start..."
                    sleep 10
                    curl http://$IP:${APP_PORT} || echo "App not reachable"
                '''
            }
        }
    }

    post {
        always {
            echo "Pipeline Finished"
        }
    }
}
